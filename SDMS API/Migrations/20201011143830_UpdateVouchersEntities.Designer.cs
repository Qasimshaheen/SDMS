// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SDMS_API.Data;

namespace SDMS_API.Migrations
{
    [DbContext(typeof(SDMSDbContext))]
    [Migration("20201011143830_UpdateVouchersEntities")]
    partial class UpdateVouchersEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SDMS_API.Data.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("SDMS_API.Data.BankAccoountDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("AccountTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("BankAccountTypeId")
                        .HasColumnType("int");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("COAId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountTypeId");

                    b.HasIndex("BankId");

                    b.HasIndex("COAId");

                    b.ToTable("BankAccoountDetails");
                });

            modelBuilder.Entity("SDMS_API.Data.BankAccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("BankAccountTypes");
                });

            modelBuilder.Entity("SDMS_API.Data.BankOpeningBalanceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BankAccountDetailId")
                        .HasColumnType("int");

                    b.Property<int>("BankOBMId")
                        .HasColumnType("int");

                    b.Property<decimal>("OpeningBalance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountDetailId")
                        .IsUnique()
                        .HasFilter("[BankAccountDetailId] IS NOT NULL");

                    b.HasIndex("BankOBMId");

                    b.ToTable("BankOpeningBalanceDetail");
                });

            modelBuilder.Entity("SDMS_API.Data.BankOpeningBalanceMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<int>("VoucherMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VoucherMasterId");

                    b.ToTable("BankOpeningBalanceMaster");
                });

            modelBuilder.Entity("SDMS_API.Data.ChartofAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDebit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDetailAccount")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ParentAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentAccountId");

                    b.ToTable("ChartofAccounts");
                });

            modelBuilder.Entity("SDMS_API.Data.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("SDMS_API.Data.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NTN")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("SDMS_API.Data.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<int>("COAId")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("COAId");

                    b.HasIndex("CityId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SDMS_API.Data.CustomerOpeningBalanceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasMaxLength(20);

                    b.Property<int>("CustomerOBMId")
                        .HasColumnType("int");

                    b.Property<decimal>("OpeningAdvance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpeningBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpeningReceipt")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.HasIndex("CustomerOBMId");

                    b.ToTable("CustomerOpeningBalanceDetails");
                });

            modelBuilder.Entity("SDMS_API.Data.CustomerOpeningBalanceMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<int>("VoucherMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VoucherMasterId");

                    b.ToTable("CustomerOpeningBalanceMasters");
                });

            modelBuilder.Entity("SDMS_API.Data.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("SDMS_API.Data.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NIC")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ShiftId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("SDMS_API.Data.ManufacturingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ManufacturingMasterId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturingMasterId");

                    b.HasIndex("ProductId");

                    b.ToTable("ManufacturingDetails");
                });

            modelBuilder.Entity("SDMS_API.Data.ManufacturingMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormulaMasterId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddedBy");

                    b.HasIndex("FormulaMasterId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("WarehouseId");

                    b.ToTable("ManufacturingMasters");
                });

            modelBuilder.Entity("SDMS_API.Data.ManufacturingRawDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ManufacturingDetailMasterId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturingDetailMasterId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("ManufacturingRawDetails");
                });

            modelBuilder.Entity("SDMS_API.Data.MeasureUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MeasureUnits");
                });

            modelBuilder.Entity("SDMS_API.Data.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsReport")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ParentMenueId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentMenueId");

                    b.ToTable("Menues");
                });

            modelBuilder.Entity("SDMS_API.Data.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ActualPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CostOfGoodsSoldCOAId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InventoryCOAId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MeasureUnitID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("RetailPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SaleCOAId")
                        .HasColumnType("int");

                    b.Property<int?>("SaleDiscountCOAId")
                        .HasColumnType("int");

                    b.Property<int?>("SaleReturnCOAId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CostOfGoodsSoldCOAId");

                    b.HasIndex("InventoryCOAId");

                    b.HasIndex("MeasureUnitID");

                    b.HasIndex("SaleCOAId");

                    b.HasIndex("SaleDiscountCOAId");

                    b.HasIndex("SaleReturnCOAId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SDMS_API.Data.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("SDMS_API.Data.ProductFormulaDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FormulaMasterId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FormulaMasterId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductFormulaDetail");
                });

            modelBuilder.Entity("SDMS_API.Data.ProductFormulaMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductFormulaMaster");
                });

            modelBuilder.Entity("SDMS_API.Data.ProductLedger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsInOut")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SerialNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TransNo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddedBy");

                    b.HasIndex("ProductId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("WarehouseId");

                    b.ToTable("ProductLedgers");
                });

            modelBuilder.Entity("SDMS_API.Data.ProductOpeningBalanceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductOBMId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductOBMId");

                    b.ToTable("ProductOpeningBalanceDetails");
                });

            modelBuilder.Entity("SDMS_API.Data.ProductOpeningBalanceMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<int>("VoucherMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VoucherMasterId");

                    b.ToTable("ProductOpeningBalanceMasters");
                });

            modelBuilder.Entity("SDMS_API.Data.PurchaseDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountPerc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseMasterId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseMasterId");

                    b.ToTable("PurchaseDetails");
                });

            modelBuilder.Entity("SDMS_API.Data.PurchaseMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountPerc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherMasterId")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddedBy");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("VendorId");

                    b.HasIndex("VoucherMasterId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("PurchaseMasters");
                });

            modelBuilder.Entity("SDMS_API.Data.SOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountPerc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SOrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SOrderId");

                    b.ToTable("SOrderDetails");
                });

            modelBuilder.Entity("SDMS_API.Data.SOrderMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountPerc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AddedBy");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("SOrderMasters");
                });

            modelBuilder.Entity("SDMS_API.Data.SalesDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountPerc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SalesMasterId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SalesMasterId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("SalesDetails");
                });

            modelBuilder.Entity("SDMS_API.Data.SalesMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountPerc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("SOrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VoucherMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddedBy");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SOrderId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("VoucherMasterId");

                    b.ToTable("SalesMasters");
                });

            modelBuilder.Entity("SDMS_API.Data.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("SDMS_API.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SDMS_API.Data.UserRight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPost")
                        .HasColumnType("bit");

                    b.Property<int>("MenueId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenueId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRights");
                });

            modelBuilder.Entity("SDMS_API.Data.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<int>("COAId")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("COAId");

                    b.HasIndex("CityId");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("SDMS_API.Data.VendorOpeningBalanceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("OpeningAdvance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpeningBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpeningReceipt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.Property<int>("VendorOBMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VendorId")
                        .IsUnique();

                    b.HasIndex("VendorOBMasterId");

                    b.ToTable("vendorOpeningBalanceDetails");
                });

            modelBuilder.Entity("SDMS_API.Data.VendorOpeningBalanceMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<int>("VoucherMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VoucherMasterId");

                    b.ToTable("vendorOpeningBalanceMasters");
                });

            modelBuilder.Entity("SDMS_API.Data.VoucherDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("COAId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDebit")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.Property<int>("VoucherMasterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("COAId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("VendorId");

                    b.HasIndex("VoucherMasterId");

                    b.ToTable("VoucherDetails");
                });

            modelBuilder.Entity("SDMS_API.Data.VoucherMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ChequeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChequeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<string>("Narration")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("TotalCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalDebit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("VoucherType")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.HasIndex("AddedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("VoucherMasters");
                });

            modelBuilder.Entity("SDMS_API.Data.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("SDMS_API.Data.BankAccoountDetail", b =>
                {
                    b.HasOne("SDMS_API.Data.BankAccountType", "TblBankAccountType")
                        .WithMany("BankAccoountDetails")
                        .HasForeignKey("BankAccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.Bank", "TblBank")
                        .WithMany("BankAccoountDetails")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.ChartofAccount", "TblChartofAccount")
                        .WithMany("BankAccoountDetails")
                        .HasForeignKey("COAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.BankOpeningBalanceDetail", b =>
                {
                    b.HasOne("SDMS_API.Data.BankAccoountDetail", "TblBankAccoountDetail")
                        .WithOne("BankOpeningBalanceDetail")
                        .HasForeignKey("SDMS_API.Data.BankOpeningBalanceDetail", "BankAccountDetailId");

                    b.HasOne("SDMS_API.Data.BankOpeningBalanceMaster", "TblBankOpeningBalanceMaster")
                        .WithMany("TblbankOpeningBalanceDetails")
                        .HasForeignKey("BankOBMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.BankOpeningBalanceMaster", b =>
                {
                    b.HasOne("SDMS_API.Data.VoucherMaster", "TblVoucherMaster")
                        .WithMany("bankOpeningBalanceMastes")
                        .HasForeignKey("VoucherMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.ChartofAccount", b =>
                {
                    b.HasOne("SDMS_API.Data.ChartofAccount", "TblParentChartOfAccount")
                        .WithMany("TblChildChartOfAccounts")
                        .HasForeignKey("ParentAccountId");
                });

            modelBuilder.Entity("SDMS_API.Data.Company", b =>
                {
                    b.HasOne("SDMS_API.Data.Warehouse", "TblWarehouse")
                        .WithMany("Companies")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.Customer", b =>
                {
                    b.HasOne("SDMS_API.Data.ChartofAccount", "TblChartofAccount")
                        .WithMany("Customers")
                        .HasForeignKey("COAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.City", "TblCity")
                        .WithMany("Customers")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.CustomerOpeningBalanceDetail", b =>
                {
                    b.HasOne("SDMS_API.Data.Customer", "TblCustomer")
                        .WithOne("TblCustomerOpeningBalanceDetail")
                        .HasForeignKey("SDMS_API.Data.CustomerOpeningBalanceDetail", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.CustomerOpeningBalanceMaster", "TblCustomerOpeningBalanceMaster")
                        .WithMany("CustomerOpeningBalanceDetails")
                        .HasForeignKey("CustomerOBMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.CustomerOpeningBalanceMaster", b =>
                {
                    b.HasOne("SDMS_API.Data.VoucherMaster", "TblVoucherMaster")
                        .WithMany("CustomerOpeningBalanceMasters")
                        .HasForeignKey("VoucherMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.Employee", b =>
                {
                    b.HasOne("SDMS_API.Data.Department", "TblDepartment")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("SDMS_API.Data.Shift", "TblShift")
                        .WithMany("Employees")
                        .HasForeignKey("ShiftId");
                });

            modelBuilder.Entity("SDMS_API.Data.ManufacturingDetail", b =>
                {
                    b.HasOne("SDMS_API.Data.ManufacturingMaster", "TblManufacturingMaster")
                        .WithMany("ManufacturingDetails")
                        .HasForeignKey("ManufacturingMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.Product", "TblProduct")
                        .WithMany("ManufacturingDetails")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("SDMS_API.Data.ManufacturingMaster", b =>
                {
                    b.HasOne("SDMS_API.Data.User", "TblAddedByUser")
                        .WithMany("TblManufacturingMasterAddedBy")
                        .HasForeignKey("AddedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.ProductFormulaMaster", "TblProductFormulaMaster")
                        .WithMany("ManufacturingMasters")
                        .HasForeignKey("FormulaMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.Product", "Product")
                        .WithMany("ManufacturingMasters")
                        .HasForeignKey("ProductId");

                    b.HasOne("SDMS_API.Data.User", "TblUpdatedByUser")
                        .WithMany("TblManufacturingMasterUpdatedBy")
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("SDMS_API.Data.Warehouse", "Warehouse")
                        .WithMany("ManufacturingMasters")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.ManufacturingRawDetail", b =>
                {
                    b.HasOne("SDMS_API.Data.ManufacturingDetail", "TblManufacturingDetail")
                        .WithMany("ManufacturingRawDetails")
                        .HasForeignKey("ManufacturingDetailMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.Warehouse", "TblWarehouse")
                        .WithMany("ManufacturingRawDetails")
                        .HasForeignKey("WarehouseId");
                });

            modelBuilder.Entity("SDMS_API.Data.Menu", b =>
                {
                    b.HasOne("SDMS_API.Data.Menu", "TblParentMenue")
                        .WithMany("TblChildMenues")
                        .HasForeignKey("ParentMenueId");
                });

            modelBuilder.Entity("SDMS_API.Data.Product", b =>
                {
                    b.HasOne("SDMS_API.Data.ProductCategory", "TblProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.ChartofAccount", "TblCostOfGoodsSoldChartOfAccount")
                        .WithMany("TblCostOfGoodsSoldProducts")
                        .HasForeignKey("CostOfGoodsSoldCOAId");

                    b.HasOne("SDMS_API.Data.ChartofAccount", "TblInventoryChartOfAccount")
                        .WithMany("TblInventoryProducts")
                        .HasForeignKey("InventoryCOAId");

                    b.HasOne("SDMS_API.Data.MeasureUnit", "TblMeasureUnit")
                        .WithMany("Products")
                        .HasForeignKey("MeasureUnitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.ChartofAccount", "TblSaleChartOfAccount")
                        .WithMany("TblSaleProducts")
                        .HasForeignKey("SaleCOAId");

                    b.HasOne("SDMS_API.Data.ChartofAccount", "TblSaleDiscountChartOfAccount")
                        .WithMany("TblSaleDiscountProducts")
                        .HasForeignKey("SaleDiscountCOAId");

                    b.HasOne("SDMS_API.Data.ChartofAccount", "TblSaleReturnChartOfAccount")
                        .WithMany("TblSaleReturnProducts")
                        .HasForeignKey("SaleReturnCOAId");
                });

            modelBuilder.Entity("SDMS_API.Data.ProductFormulaDetail", b =>
                {
                    b.HasOne("SDMS_API.Data.ProductFormulaMaster", "TblProductFormulaMaster")
                        .WithMany("ProductFormulaDetails")
                        .HasForeignKey("FormulaMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.Product", "TblProduct")
                        .WithMany("ProductFormulaDetails")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("SDMS_API.Data.ProductFormulaMaster", b =>
                {
                    b.HasOne("SDMS_API.Data.Product", "TblProduct")
                        .WithMany("ProductFormulaMasters")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.ProductLedger", b =>
                {
                    b.HasOne("SDMS_API.Data.User", "TblAddedByUser")
                        .WithMany("TblProductLedgerAddedBy")
                        .HasForeignKey("AddedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.Product", "TblProduct")
                        .WithMany("ProductLedgers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.User", "TblUpdatedByUser")
                        .WithMany("TblProductLedgersUpdatedBy")
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("SDMS_API.Data.Warehouse", "TblWarehouse")
                        .WithMany("ProductLedgers")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.ProductOpeningBalanceDetail", b =>
                {
                    b.HasOne("SDMS_API.Data.Product", "TblProduct")
                        .WithMany("ProductOpeningBalanceDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.ProductOpeningBalanceMaster", "TblProductOpeningBalanceMaster")
                        .WithMany("ProductOpeningBalanceDetails")
                        .HasForeignKey("ProductOBMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.ProductOpeningBalanceMaster", b =>
                {
                    b.HasOne("SDMS_API.Data.VoucherMaster", "TblVoucherMaster")
                        .WithMany()
                        .HasForeignKey("VoucherMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.PurchaseDetail", b =>
                {
                    b.HasOne("SDMS_API.Data.Product", "TblProduct")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.PurchaseMaster", "TblPurchaseMaster")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("PurchaseMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.PurchaseMaster", b =>
                {
                    b.HasOne("SDMS_API.Data.User", "TblAddedByUser")
                        .WithMany("TblPurchaseMastersAddedBy")
                        .HasForeignKey("AddedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.User", "TblUpdatedByUser")
                        .WithMany("TblPurchaseMastersUpdatedBy")
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("SDMS_API.Data.Vendor", "Vendor")
                        .WithMany("PurchaseMasters")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.VoucherMaster", "TblVoucherMaster")
                        .WithMany("PurchaseMasters")
                        .HasForeignKey("VoucherMasterId");

                    b.HasOne("SDMS_API.Data.Warehouse", "TblWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.SOrderDetail", b =>
                {
                    b.HasOne("SDMS_API.Data.Product", "TblProduct")
                        .WithMany("SOrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.SOrderMaster", "TblSOrderMaster")
                        .WithMany("SOrderDetails")
                        .HasForeignKey("SOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.SOrderMaster", b =>
                {
                    b.HasOne("SDMS_API.Data.User", "TblAddedByUser")
                        .WithMany("TblSOrderMastersAddedBy")
                        .HasForeignKey("AddedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.Customer", "TblCustomer")
                        .WithMany("SOrderMasters")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.User", "TblUpdatedByUser")
                        .WithMany("TblSOrderMastersUpdatedBy")
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("SDMS_API.Data.SalesDetail", b =>
                {
                    b.HasOne("SDMS_API.Data.Product", "TblProduct")
                        .WithMany("SalesDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.SalesMaster", "TblSalesMaster")
                        .WithMany("SalesDetails")
                        .HasForeignKey("SalesMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.Warehouse", "Warehouse")
                        .WithMany("SalesDetails")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.SalesMaster", b =>
                {
                    b.HasOne("SDMS_API.Data.User", "TblAddedByUser")
                        .WithMany("TblSalesMastersAddedBy")
                        .HasForeignKey("AddedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.Customer", "TblCustomer")
                        .WithMany("SalesMasters")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.SOrderMaster", "TblSOrderMaster")
                        .WithMany()
                        .HasForeignKey("SOrderId");

                    b.HasOne("SDMS_API.Data.User", "TblUpdatedByUser")
                        .WithMany("TblSalesMastersUpdatedBy")
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("SDMS_API.Data.VoucherMaster", "TblVoucherMaster")
                        .WithMany("SalesMasters")
                        .HasForeignKey("VoucherMasterId");
                });

            modelBuilder.Entity("SDMS_API.Data.UserRight", b =>
                {
                    b.HasOne("SDMS_API.Data.Menu", "Menue")
                        .WithMany("UserRights")
                        .HasForeignKey("MenueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.User", "User")
                        .WithMany("UserRights")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.Vendor", b =>
                {
                    b.HasOne("SDMS_API.Data.ChartofAccount", "TblChartofAccount")
                        .WithMany("Vendors")
                        .HasForeignKey("COAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.City", "TblCity")
                        .WithMany("Vendors")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.VendorOpeningBalanceDetail", b =>
                {
                    b.HasOne("SDMS_API.Data.Vendor", "TblVendor")
                        .WithOne("TblVendorOpeningBalanceDetail")
                        .HasForeignKey("SDMS_API.Data.VendorOpeningBalanceDetail", "VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.VendorOpeningBalanceMaster", "TblVendorOpeningBalanceMaster")
                        .WithMany("VendorOpeningBalanceDetails")
                        .HasForeignKey("VendorOBMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.VendorOpeningBalanceMaster", b =>
                {
                    b.HasOne("SDMS_API.Data.VoucherMaster", "TblVoucherMaster")
                        .WithMany("VendorOpeningBalanceMasters")
                        .HasForeignKey("VoucherMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.VoucherDetail", b =>
                {
                    b.HasOne("SDMS_API.Data.ChartofAccount", "ChartofAccount")
                        .WithMany("VoucherDetails")
                        .HasForeignKey("COAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.Customer", "TblCustomer")
                        .WithMany("VoucherDetails")
                        .HasForeignKey("CustomerId");

                    b.HasOne("SDMS_API.Data.Vendor", "TblVendor")
                        .WithMany("VoucherDetails")
                        .HasForeignKey("VendorId");

                    b.HasOne("SDMS_API.Data.VoucherMaster", "TblVoucherMaster")
                        .WithMany("VoucherDetails")
                        .HasForeignKey("VoucherMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SDMS_API.Data.VoucherMaster", b =>
                {
                    b.HasOne("SDMS_API.Data.User", "TblAddedByUser")
                        .WithMany("TblVoucherMastersAddedBy")
                        .HasForeignKey("AddedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SDMS_API.Data.User", "TblUpdatedByUser")
                        .WithMany("TblVoucherMastersUpdatedBy")
                        .HasForeignKey("UpdatedBy");
                });
#pragma warning restore 612, 618
        }
    }
}
